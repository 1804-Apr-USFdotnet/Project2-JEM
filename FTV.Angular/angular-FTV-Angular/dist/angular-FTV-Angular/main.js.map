{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,uLAAuL,WAAW,uBAAuB,UAAU,sEAAsE,UAAU,IAAI,YAAY,kHAAkH,aAAa,iCAAiC,oBAAoB,8BAA8B,YAAY,wBAAwB,YAAY,wBAAwB,YAAY,iC;;;;;;;;;;;;;;;;;;;;;;;;;ACA/jB;AACQ;AAMlD;IAME,sBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAL5C,cAAS,GAAW,EAAE,CAAC;QACvB,aAAQ,GAAW,EAAE,CAAC;IAIyB,CAAC;IAC9C,iCAAU,GAAV,UAAW,QAAgB;QAA3B,iBAOC;QANC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,4EAA0E,QAAU,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC9H,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAClC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YACjC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YAC3C,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAdU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAOgC,+DAAU;OAN/B,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACO;AAatD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACjBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<label>Username:  </label>\\n    <input #searchValue type=\\\"text\\\" />\\n\\n<button (click)=\\\"getProfile(searchValue.value)\\\">Get Profile</button>\\n\\n<div>\\n    <span>{{_Username}}, </span>\\n    <span>{{Platform}}, </span>\\n    <ul>\\n      <li *ngFor=\\\"let stat of LifeTimeStats\\\">{{stat.Key}}, {{stat.Value}}</li>\\n    </ul>\\n    <ul>\\n      Recent Matches: <br/>\\n      <li *ngFor=\\\"let stats of RecentMatches\\\">Kills: {{stats.Kills}} <br/>\\n        Rating Change: {{stats.RatingChange}}<br/>\\n        First Place: {{stats.Top1}}<br/>\\n        Top 3: {{stats.Top3}}<br/>\\n        Top 5: {{stats.Top5}}</li>\\n    </ul>\\n\\n\\n\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n_Username: String = '';\nPlatform: String = '';\nLifeTimeStats: String[];\nRecentMatches: String[];\n\n  constructor(private httpClient: HttpClient) {}\n  getProfile(Username: String) {\n    this.httpClient.get(`http://ec2-52-15-80-15.us-east-2.compute.amazonaws.com/FTV/api/Players/${Username}`).subscribe((data: any) => {\n    this._Username = data['Username'];\n    this.Platform = data['Platform'];\n    this.LifeTimeStats = data['LifeTimeStats'];\n    this.RecentMatches = data['RecentMatches'];\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}